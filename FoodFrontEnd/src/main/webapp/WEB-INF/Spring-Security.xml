<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- No security for static resources -->

	
	
	
	<http pattern="/resources/**" security="none" />


	<!-- Security for the rest of my mappings -->	
	<http>
		<intercept-url pattern="/admin/**" access="hasAuthority('ADMIN')" />
		<intercept-url pattern="/user/**" access="hasAuthority('User')" />
		<!-- <intercept-url pattern="/supplier/**" access="hasAuthority('SUPPLIER')" 
			/> -->
		<intercept-url pattern="/**" access="permitAll" />
		<form-login login-page="/login" default-target-url="/"
			authentication-failure-url="/Login?error" />
		<logout logout-success-url="/" logout-url="/j_spring_security_logout" />
		<csrf disabled="true" />
		<!--this is to avoid redirecting to other websites (cross site request 
			forgery) -->
	</http>

	<authentication-manager>

		<authentication-provider>

			<jdbc-user-service data-source-ref="datasource"
				users-by-username-query="SELECT email, password, 'TRUE' AS enabled FROM users WHERE email = ?"
				authorities-by-username-query="SELECT email, role FROM users WHERE email = ?" />
		</authentication-provider>
		<!--name of the bean has to be renamed to dataSource -->
	</authentication-manager>


</beans:beans>

